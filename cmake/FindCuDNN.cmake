
if (WIN32)
# modify the below line for your directory
set(CUDNN_TOP_DIR "${TOP_DIR}/Extern/libcudnn")
endif (WIN32)

set (CUDNN_FIND_REQUIRED_COMPONENTS TORCH CUDNN_CUDA CUDNN_CPU C10 C10_CUDA CAFFE2_NVRTC)
set (CUDNN_DEBUG_LIBPATH ${CUDNN_TOP_DIR}/lib/Debug)
set (CUDNN_RELEASE_LIBPATH ${CUDNN_TOP_DIR}/lib)

FIND_PATH(CUDNN_INCLUDE_DIR cudnn.h
	${CUDNN_TOP_DIR}/include
)

FIND_LIBRARY(CUDNN_LIB NAMES cudnn64_8 PATHS ${CUDNN_RELEASE_LIBPATH})

FIND_LIBRARY(CUDNN_ADVINFER_LIB NAMES cudnn_adv_infer64_8 PATHS ${CUDNN_RELEASE_LIBPATH})
FIND_LIBRARY(CUDNN_ADVTRAIN_LIB NAMES cudnn_adv_train64_8 PATHS ${CUDNN_RELEASE_LIBPATH})
FIND_LIBRARY(CUDNN_CNNINFER_LIB NAMES cudnn_cnn_infer64_8 PATHS ${CUDNN_RELEASE_LIBPATH})
FIND_LIBRARY(CUDNN_CNNTRAIN_LIB NAMES cudnn_cnn_train64_8 PATHS ${CUDNN_RELEASE_LIBPATH})
FIND_LIBRARY(CUDNN_OPSINFER_LIB NAMES cudnn_ops_infer64_8 PATHS ${CUDNN_RELEASE_LIBPATH})
FIND_LIBRARY(CUDNN_OPSTRAIN_LIB NAMES cudnn_ops_train64_8 PATHS ${CUDNN_RELEASE_LIBPATH})

FOREACH(NAME ${CUDNN_FIND_REQUIRED_COMPONENTS})
	LIST(APPEND CUDNN_DEBUG_LIBRARIES    "${${NAME}_RELEASE_LIB}")
	LIST(APPEND CUDNN_RELEASE_LIBRARIES  "${${NAME}_RELEASE_LIB}")
ENDFOREACH(NAME)


if(CUDNN_INCLUDE_DIR)
   set(CUDNN_FOUND TRUE)
endif(CUDNN_INCLUDE_DIR)
	 
if(CUDNN_FOUND)
   if(NOT CUDNN_FIND_QUIETLY)
      message(STATUS "Found TORCH: ${CUDNN_INCLUDE_DIR}")
   endif(NOT CUDNN_FIND_QUIETLY)
else(CUDNN_FOUND)
   if(CUDNN_FIND_REQUIRED)
      message(FATAL_ERROR "could NOT find TORCH")
   endif(CUDNN_FIND_REQUIRED)
endif(CUDNN_FOUND)

MARK_AS_ADVANCED(CUDNN_TOP_DIR, CUDNN_DEBUG_LIBRARIES, CUDNN_DEBUG_LIBPATH, CUDNN_INCLUDE_DIR)
MARK_AS_ADVANCED(CUDNN_RELEASE_LIBRARIES, CUDNN_RELEASE_LIBPATH, CUDNN_INCLUDE_DIR)

message(${CUDNN_RELEASE_LIBRARIES})
